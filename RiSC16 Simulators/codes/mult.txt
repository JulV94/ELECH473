		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		addi 7,7,16			// init loop counter at 16
		addi 6,6,1			// init mask for multiplication
loop:		beq 7,0,endloop
			sw 7,0,0		// save counter at mem0
			nand 7,2,6
			nand 7,7,7		// apply mask on r2 -> r7
			beq 7,0,shifting	// check if it's 0 or 1
			add 4,4,5		// msp of 32 bits add

			sw 6,0,1		// save mask at mem1
			sw 2,0,2		// save op2 at mem2
			add 6,1,3		// add the lsp of 32 bits add
			movi 7,0x8000		// create a mask
			nand 2,1,7
			nand 2,2,2		// extract msb of op1 lsp
			beq 2,0,zero

			nand 2,3,7
			nand 2,2,2		// extract msb of result lsp
			beq 2,0,msbresult
			beq 0,0,carry

msbresult:		nand 2,6,7
			nand 2,2,2		// extract msb of addition lsp
			beq 2,0,carry
			beq 0,0,nocarry

zero:			nand 2,3,7
			nand 2,2,2		// extract msb of result lsp
			beq 2,0,nocarry
			beq 0,0,msbresult

carry:			addi 4,4,1		// add carry to msp of result
nocarry:		addi 3,6,0		// move the lsp of result in right register
			
			lw 2,0,2		// load op2 at mem2
			lw 6,0,1		// load mask at mem1

shifting:		add 6,6,6		// shift mask << 1
			add 5,5,5		// shift msp op1 << 1
			sw 6,0,1		// save mask at mem1
			movi 6,0x8000		// mask for msb 32 shift
			nand 7,1,6
			nand 7,7,7		// extract the msb
			beq 7,0,1		// is there a carry?
			addi 5,5,1		// add carry in msp op1
			addi 1,1,1		// shift lsp op1 << 1
			lw 6,0,1		// load mask at mem1
			lw 7,0,0		// load counter from mem0
			addi 7,7,-1		// decrement for the loop
			beq 0,0,loop
endloop:	halt
